#!/usr/bin/env python


"""
Module containing functions to subset the raw data:
keeps description, country, price, points and adds
column for price in GBP

"""

import sys
import datetime

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt





#note shown: imported antibiotic annotations into prescription table using code provided by
#Dr. Luo's postdoc, which pings API
dtype = {'icustay_id': str,
         'NDC': str,
         'rxcui': str,
         'ingredient': str}
prescriptions = pd.read_csv('/Users/geickelb1/Desktop/PhD_Misc/HSIP_442_Yuan_Lao/project/Newprescription.csv', index_col=0, dtype=dtype)


prescriptions_updated = list(prescriptions.loc[prescriptions.loc[:,"Antibiotics"]==True,'drug'].unique()) 
len(prescriptions.loc[prescriptions.loc[:,"drug"].isin(prescriptions_updated),'gsn'].unique()) #wow added 117 additional gsn...

ABrx2= prescriptions.loc[prescriptions.loc[:,"drug"].isin(prescriptions_updated),:]

ABrx = pd.DataFrame(prescriptions.loc[prescriptions['Antibiotics'] == True, :])

ABrx_Drug_list = list(prescriptions.loc[prescriptions.loc[:,'Antibiotics'] == True, 'drug'].unique())
ABrx_Drug_list = [str(x).lower() for x in ABrx_Drug_list]



def process_data_GBP(filename):
    """
    Get only the needed subset from the data.
    Args:
    -----
    filename: str
        Path to the filename containing the wine data

    Returns:
    -----
    fname: st
        Path to the created data set
    """
    

    # Load table
    wine = pd.read_csv(filename)

    # Subset of data to keep
    wine_keep = wine.loc[:,['country', 'designation', 'points', 'price']]

    # Add column with prices in GBP
    wine_keep['price_GBP'] = wine_keep['price'].apply(lambda x : x * 1.2)

    # Constructing the fname
    today = datetime.datetime.today().strftime('%Y-%m-%d')
    fname = f'data/interim/{today}-winemag_priceGBP.csv' #not sure why they add the f before. 

    # Saving the csv
    wine_keep.to_csv(fname, index = False)

    return(fname)


if __name__ == '__main__':
    filename = sys.argv[1]
    print(filename)
    print(process_data_GBP(filename))

